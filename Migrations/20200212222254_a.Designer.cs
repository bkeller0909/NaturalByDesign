// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NBDv2.Data;

namespace NBDv2.Migrations
{
    [DbContext(typeof(NBDContext))]
    [Migration("20200212222254_a")]
    partial class a
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("MC")
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NBDv2.Models.City", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("City");
                });

            modelBuilder.Entity("NBDv2.Models.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(50);

                    b.Property<int>("CityID");

                    b.Property<string>("ConFirst")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ConLast")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ConPhone");

                    b.Property<string>("ConPosition");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long>("Phone");

                    b.Property<string>("Postal")
                        .HasMaxLength(15);

                    b.Property<string>("Province")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("CityID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("NBDv2.Models.Labour", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EstStartDate");

                    b.Property<int>("ProjectID");

                    b.Property<DateTime>("StartDate");

                    b.Property<DateTime>("TimeSpent");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.ToTable("Labour");
                });

            modelBuilder.Entity("NBDv2.Models.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BidCustApproved");

                    b.Property<DateTime>("BidDate");

                    b.Property<bool>("BidManagementApproved");

                    b.Property<int>("ClientID");

                    b.Property<double?>("Cost");

                    b.Property<string>("Desc");

                    b.Property<double>("EstCost");

                    b.Property<DateTime>("EstFinishDate");

                    b.Property<DateTime>("EstStartDate");

                    b.Property<DateTime?>("FinishDate");

                    b.Property<string>("Name");

                    b.Property<DateTime?>("StartDate");

                    b.HasKey("ID");

                    b.HasIndex("ClientID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("NBDv2.Models.Task", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desc");

                    b.Property<int>("Hours");

                    b.Property<int>("LabourID");

                    b.HasKey("ID");

                    b.HasIndex("LabourID");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("NBDv2.Models.Client", b =>
                {
                    b.HasOne("NBDv2.Models.City", "City")
                        .WithMany("Clients")
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NBDv2.Models.Labour", b =>
                {
                    b.HasOne("NBDv2.Models.Project", "Project")
                        .WithMany("Labour")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NBDv2.Models.Project", b =>
                {
                    b.HasOne("NBDv2.Models.Client", "Client")
                        .WithMany("Projects")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("NBDv2.Models.Task", b =>
                {
                    b.HasOne("NBDv2.Models.Labour", "Labour")
                        .WithMany("Tasks")
                        .HasForeignKey("LabourID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
